************ MONGODB ****************
Bisogna creare il Database su MongoDB, tramite il seguente comando:

use BEARS // crea il database BEARS

Dopodichè, possiamo accederci e fare le nostre cose.


************ GIT ****************
- git config core.autocrlf false    ----> risolve il problema degli a capo riga-


************* HEROKU **************
- scrivere process.env.PORT sul server ricordando di mettere PORT maiuscolo.


*********** COLLEGARSI AD HEROKU E A GIT: **************
- Seguire la procedura riportata sul sito per collegarsi ad Heroku.
- Da Heroku (interfaccia web) collegare l'app appena creata al proprio account Git.
- Da Git (interfaccia web), creare un nuovo repository.
- Appena creato il repository, seguire le istruzioni riportate su Git (interfaccia web) per collegare il proprio repository in locale con il repository in remoto appena creato.


************* JEST **************
Aggiungere le seguenti cose al package.json:
"jest": {
    "verbose": true,
    "collectCoverage": true
  }
"scripts": {
    "test": "jest"
  }

Dopodiche: ?????(DA VERIFICARE!!!!)
- assicurarsi di aver fatto l'export del modulo del router nel file server.js, scrivendo:  -->   module.exports = router;
- importare il modulo nel file di test.js, scrivendo:  -->  const server = require('./server');
In questo modo, diciamo di fare il test di coverage sul router, o meglio su tutte le funzioni definite nel router.


